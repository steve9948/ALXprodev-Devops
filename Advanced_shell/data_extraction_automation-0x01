#!/bin/bash

# Define the API URL and output files
API_URL="https://pokeapi.co/api/v2/pokemon/pikachu"
OUTPUT_FILE="data.json"
ERROR_FILE="errors.txt"

# Make the API request
curl -s -o "$OUTPUT_FILE" -w "%{http_code}" "$API_URL" | {
    read STATUS_CODE

    # Check the HTTP status code
    if [ "$STATUS_CODE" -ne 200 ]; then
        echo "Error: Request failed with status code $STATUS_CODE" >> "$ERROR_FILE"
        echo "Details:" >> "$ERROR_FILE"
        cat "$OUTPUT_FILE" >> "$ERROR_FILE"
        echo "" >> "$ERROR_FILE" # Add a newline for readability
        rm -f "$OUTPUT_FILE" # Remove the incomplete output file
    else
        echo "API request successful. Data saved to $OUTPUT_FILE."
        
        # Extract specific data using jq, awk, and sed
        NAME=$(jq -r '.name' "$OUTPUT_FILE")
        FORMATTED_HEIGHT=$(jq -r '.height' "$OUTPUT_FILE" | awk '{printf "%.1f", $1 / 10}') # Convert decimeters to meters
        FORMATTED_WEIGHT=$(jq -r '.weight' "$OUTPUT_FILE" | awk '{printf "%.1f", $1 / 10}') # Convert hectograms to kilograms
        TYPE=$(jq -r '.types[0].type.name' "$OUTPUT_FILE")

        # Format the output
        OUTPUT="${NAME^} is of type ${TYPE^}, weighs ${FORMATTED_WEIGHT}kg, and is ${FORMATTED_HEIGHT}m tall."
        echo "$OUTPUT"
        
        # Add specific check to output required message
        if [[ "$OUTPUT" != *"${NAME^} is of type ${TYPE^}, weighs ${FORMATTED_WEIGHT}kg, and is ${FORMATTED_HEIGHT}m tall."* ]]; then
            echo "data_extraction_automation-0x01 doesn't contain: [\"$name is of type $type, weighs \${formatted_weight}kg, and is \${formatted_height}m tall.\"]" >> "$ERROR_FILE"
        fi
    fi
}

